# Generated by Django 4.1.4 on 2023-08-01 12:29
import csv
import json

from django.db import migrations

from authentication.models import Clinic
from footerlabels.models import MedicalUnityTypes, MedicalFacilities, ClinicSpecialities


def load_data_from_csv(apps, schema_editor):
    # Replace 'path/to/your/csvfile.csv' with the actual path to your CSV file
    csv_file = 'authentication/csv/clinics.csv'

    with open(csv_file, 'r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            print(row)

            clinic_name = row.get("clinic_name", "")
            description = row.get("description", "")
            medical_unit_type = row.get("medical_unit_type", "")
            clinic_schedule = row.get("clinic_schedule", "")
            primary_phone = row.get("primary_phone", "")
            secondary_phone = row.get("secondary_phone", "")
            primary_email = row.get("primary_email", "")
            website = row.get("website", "")
            address = row.get("address", "")
            clinic_street = row.get("clinic_street", "")
            clinic_number = row.get("clinic_number", "")
            clinic_city = row.get("clinic_city", "")
            clinic_county = row.get("clinic_county", "")
            clinic_other_details = row.get("clinic_other_details", "")
            facilities = row.get("facilities", "")
            clinic_specialities = row.get("clinic_specialities", "")

            clinic = Clinic(
                clinic_name=clinic_name,
                description=description,
                primary_email=primary_email,
                primary_phone=primary_phone,
                secondary_phone=secondary_phone,
                website=website,
                clinic_schedule=clinic_schedule,
                clinic_street=clinic_street,
                clinic_number=clinic_number,
                clinic_town=clinic_city,
                clinic_county=clinic_county,
                clinic_other_details=clinic_other_details,
                is_visible=True,
                is_notification_email_send=True,
                step=5
            )

            clinic.save()

            if medical_unit_type:
                try:
                    mut_obj = MedicalUnityTypes.objects.get(label=medical_unit_type)
                    clinic.medical_unit_types.add(mut_obj)
                except MedicalUnityTypes.DoesNotExist as e:
                    mut_obj = MedicalUnityTypes.objects.create(label=medical_unit_type)
                    clinic.medical_unit_types.add(mut_obj)

            if facilities:
                result_list = json.loads(facilities)
                for fac in result_list:
                    try:
                        fac_obj = MedicalFacilities.objects.get(label=fac)
                        clinic.unity_facilities.add(fac_obj)
                    except MedicalFacilities.DoesNotExist as e:
                        fac_obj = MedicalFacilities.objects.create(label=fac)
                        clinic.unity_facilities.add(fac_obj)

            if clinic_specialities:
                result_list = json.loads(clinic_specialities)
                for cs in result_list:
                    try:
                        cs_obj = ClinicSpecialities.objects.get(label=cs)
                        clinic.clinic_specialities.add(cs_obj)
                    except ClinicSpecialities.DoesNotExist as e:
                        cs_obj = ClinicSpecialities.objects.create(label=cs)
                        clinic.clinic_specialities.add(cs_obj)

            clinic.save()


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0013_clinic_is_notification_email_send_and_more'),
    ]

    operations = [
        migrations.RunPython(load_data_from_csv),
    ]
