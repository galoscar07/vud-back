# Generated by Django 4.1.4 on 2024-02-20 16:20

import authentication.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('footerlabels', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_clinic', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('phone_number_optional', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('contact_email_optional', models.EmailField(blank=True, max_length=254)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='images/users/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilizator',
                'verbose_name_plural': 'Utilizatori',
            },
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=255)),
                ('company_role', models.CharField(max_length=255)),
                ('town', models.CharField(max_length=255)),
                ('county', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=255)),
                ('step', models.CharField(default=0, max_length=2)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=authentication.models.upload_path_clinic)),
                ('clinic_name', models.CharField(max_length=255)),
                ('clinic_street', models.CharField(max_length=255)),
                ('clinic_number', models.CharField(max_length=255)),
                ('clinic_town', models.CharField(max_length=255)),
                ('clinic_county', models.CharField(max_length=255)),
                ('clinic_other_details', models.CharField(blank=True, max_length=255, null=True)),
                ('primary_phone', models.CharField(max_length=255)),
                ('secondary_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('primary_email', models.EmailField(max_length=254)),
                ('secondary_email', models.CharField(blank=True, max_length=610, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('website_facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('website_google', models.CharField(blank=True, max_length=255, null=True)),
                ('website_linkedin', models.CharField(blank=True, max_length=255, null=True)),
                ('website_youtube', models.CharField(blank=True, max_length=255, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinic_schedule', models.TextField()),
                ('is_visible', models.BooleanField(default=False)),
                ('is_notification_email_send', models.BooleanField(default=False)),
                ('clinic_specialities', models.ManyToManyField(to='footerlabels.clinicspecialities')),
                ('collaborator_clinic', models.ManyToManyField(blank=True, to='authentication.clinic')),
            ],
            options={
                'verbose_name': 'Clinica',
                'verbose_name_plural': 'Clinici',
            },
        ),
        migrations.CreateModel(
            name='CollaboratorDoctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=authentication.models.upload_path_collaborator_doctor)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('primary_phone', models.CharField(max_length=255)),
                ('phone_vud', models.CharField(max_length=255)),
                ('primary_email', models.EmailField(max_length=254)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('website_facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('website_google', models.CharField(blank=True, max_length=255, null=True)),
                ('website_linkedin', models.CharField(blank=True, max_length=255, null=True)),
                ('website_youtube', models.CharField(blank=True, max_length=255, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(max_length=500)),
                ('step', models.CharField(default=0, max_length=2)),
                ('is_visible', models.BooleanField(default=False)),
                ('is_notification_email_send', models.BooleanField(default=False)),
                ('academic_degree', models.ManyToManyField(to='footerlabels.academicdegree')),
                ('collaborator_clinic', models.ManyToManyField(blank=True, to='authentication.clinic')),
                ('collaborator_doctor', models.ManyToManyField(blank=True, to='authentication.collaboratordoctor')),
                ('medical_skill', models.ManyToManyField(to='footerlabels.medicalskills')),
                ('speciality', models.ManyToManyField(to='footerlabels.speciality')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctori',
            },
        ),
        migrations.CreateModel(
            name='RequestToRedeemDoctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_to_redeem', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('accepted', models.CharField(choices=[('default', 'Neselectat'), ('acceptat', 'Acceptat'), ('respins', 'Respins')], default='default', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Revendicare Doctor',
                'verbose_name_plural': 'Revendicari Doctori',
            },
        ),
        migrations.CreateModel(
            name='RequestToRedeemClinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic_to_redeem', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=20)),
                ('company_role', models.CharField(max_length=50)),
                ('message', models.TextField()),
                ('accepted', models.CharField(choices=[('default', 'Neselectat'), ('acceptat', 'Acceptat'), ('respins', 'Respins')], default='default', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Revendicare Clinica',
                'verbose_name_plural': 'Revendicari Clinici',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=authentication.models.upload_path_clinic_office)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documente',
            },
        ),
        migrations.CreateModel(
            name='DoctorReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_visible', models.BooleanField(default=False)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewsdoctors', to='authentication.collaboratordoctor')),
            ],
            options={
                'verbose_name': 'Review Doctor',
                'verbose_name_plural': 'Reviews Doctori',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClinicReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_visible', models.BooleanField(default=False)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='authentication.clinic')),
            ],
            options={
                'verbose_name': 'Review Clinica',
                'verbose_name_plural': 'Reviews Clinici',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='clinic',
            name='collaborator_doctor',
            field=models.ManyToManyField(blank=True, to='authentication.collaboratordoctor'),
        ),
        migrations.AddField(
            model_name='clinic',
            name='medical_unit_types',
            field=models.ManyToManyField(to='footerlabels.medicalunitytypes'),
        ),
        migrations.AddField(
            model_name='clinic',
            name='unity_facilities',
            field=models.ManyToManyField(to='footerlabels.medicalfacilities'),
        ),
        migrations.AddField(
            model_name='clinic',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clinic_profile', to=settings.AUTH_USER_MODEL),
        ),
    ]
